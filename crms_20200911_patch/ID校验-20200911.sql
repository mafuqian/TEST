DELETE FROM GP_QC_RULE WHERE DATA_ID='MBT_110_CI0000401_11';
DELETE FROM GP_QC_RULE WHERE DATA_ID='MBT_110_CI0000401_22';
DELETE FROM GP_QC_RULE WHERE DATA_ID='MBT_110_CI0000401_33';
DELETE FROM GP_QC_RULE WHERE DATA_ID='MBT_110_CI0000401_44';
INSERT INTO GP_QC_RULE (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_DESC, RULE_MESSAGE, RULE_TYPE, RULE_SOURCE, FIELD, FIELD_NAME, TRIMMABLE, NULLABLE, TYPE_ID, ENCODING, MIN_LENGTH, MAX_LENGTH, MIN_VALUE, MAX_VALUE, MAX_PRECISION, MIN_SCALE, MAX_SCALE, ENUMERATION, PATTERN, IN_ENTITY, IN_FIELD, EXISTS_SQL, SQL_EXTRA_KEY, SCRIPT, BEAN, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_11', '20200911', 'TESTCORP', '72', '2', NULL, NULL, '婚姻信息段的公民身份证号码则应符合如下规则：长度必须为18位；前17位为数字，第18位可为数字或字母“X”、“x”；第7-14位为出生日期，日期必须在19010101-20991231之间；校验位必须满足校验规则（参见国标《公民身份号码》（GB11643-1999））。', '婚姻信息段的公民身份证号码则应符合如下规则：长度必须为18位；前17位为数字，第18位可为数字或字母“X”、“x”；第7-14位为出生日期，日期必须在19010101-20991231之间；校验位必须满足校验规则（参见国标《公民身份号码》（GB11643-1999））。', NULL, 'BUSI', 'DATA_ID', NULL, NULL, 'Y', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'if(E_SPO_ID_TYPE=="10"){
		  def ws = [7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2];
		  def ss = [1,0,''X'',9,8,7,6,5,4,3,2];
		  String str = ''0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'';
		  def code=OTH_ID_NUM;
		  def aRegex = /^[1-9]\d{5}(190[1-9]|19[1-9][0-9]|20[0-9]{2})((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/
		  def matcher = code =~ aRegex
 		 matcher.matches();
	if(matcher.getCount()==1){
		 int sum = 0;
        if (isEmpty(code) || code.length() < 17) {
            return false
        }
		for (int i = 0; i < 17; i++){
         sum += str.indexOf(code.getAt(i)).toInteger() * ws.getAt(i).toInteger();
		 }
        def c9 = (sum%11);
		c9= (c9==2?''X'':ss.getAt(c9));
		def matcher1 = code[0..17] =~ aRegex;
       	 matcher1.matches();
        if (matcher1.getCount()!=0 && code.getAt(17).toString()==c9.toString()) {
             return  true
        }else{
             return  false

        }
}else{
		return  false
}

}
return true', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'admin', '20200119', '20200119171000', NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', '1');
INSERT INTO GP_QC_RULE (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_DESC, RULE_MESSAGE, RULE_TYPE, RULE_SOURCE, FIELD, FIELD_NAME, TRIMMABLE, NULLABLE, TYPE_ID, ENCODING, MIN_LENGTH, MAX_LENGTH, MIN_VALUE, MAX_VALUE, MAX_PRECISION, MIN_SCALE, MAX_SCALE, ENUMERATION, PATTERN, IN_ENTITY, IN_FIELD, EXISTS_SQL, SQL_EXTRA_KEY, SCRIPT, BEAN, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_22', '20200911', 'TESTCORP', '72', '2', NULL, NULL, '婚姻信息段的护照的证件号码应符合如下规则：最多12位；前3位为国籍代码。', '婚姻信息段的护照的证件号码应符合如下规则：最多12位；前3位为国籍代码。', NULL, 'BUSI', 'DATA_ID', NULL, NULL, 'Y', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'select 1
  from (select case
                 when count(1) > 0 OR TRIM(:E_SPO_ID_TYPE) is null OR TRIM(:E_SPO_ID_TYPE) != ''2'' then
                  1
                 else
                  0
               end tcnt
          from GP_BM_DATA_DIC
         WHERE data_type_no = ''19241''
           AND data_no = SUBSTR(:E_SPO_ID_NUM, 0, 3)
           AND length(nvl(:E_SPO_ID_NUM, '''')) <= 12
           AND TRIM(:E_SPO_ID_TYPE) =''2'')
 where tcnt = 1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'admin', '20200119', '20200119171000', NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', '1');
INSERT INTO GP_QC_RULE (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_DESC, RULE_MESSAGE, RULE_TYPE, RULE_SOURCE, FIELD, FIELD_NAME, TRIMMABLE, NULLABLE, TYPE_ID, ENCODING, MIN_LENGTH, MAX_LENGTH, MIN_VALUE, MAX_VALUE, MAX_PRECISION, MIN_SCALE, MAX_SCALE, ENUMERATION, PATTERN, IN_ENTITY, IN_FIELD, EXISTS_SQL, SQL_EXTRA_KEY, SCRIPT, BEAN, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_33', '20200911', 'TESTCORP', '72', '2', NULL, NULL, '婚姻信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', '婚姻信息段的港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', NULL, 'BUSI', 'DATA_ID', NULL, NULL, 'Y', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, ' if(E_SPO_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = E_SPO_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'admin', '20200119', '20200119171000', NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', '1');
INSERT INTO GP_QC_RULE (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_DESC, RULE_MESSAGE, RULE_TYPE, RULE_SOURCE, FIELD, FIELD_NAME, TRIMMABLE, NULLABLE, TYPE_ID, ENCODING, MIN_LENGTH, MAX_LENGTH, MIN_VALUE, MAX_VALUE, MAX_PRECISION, MIN_SCALE, MAX_SCALE, ENUMERATION, PATTERN, IN_ENTITY, IN_FIELD, EXISTS_SQL, SQL_EXTRA_KEY, SCRIPT, BEAN, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_44', '20200911', 'TESTCORP', '72', '2', NULL, NULL, '婚姻信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', '婚姻信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', NULL, 'BUSI', 'DATA_ID', NULL, NULL, 'Y', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'if(E_SPO_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = E_SPO_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'admin', '20200119', '20200119171000', NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', '1');
DELETE FROM GP_QC_RULE_MAP WHERE DATA_ID='MBT_110_CI0000401_11';
DELETE FROM GP_QC_RULE_MAP WHERE DATA_ID='MBT_110_CI0000401_22';
DELETE FROM GP_QC_RULE_MAP WHERE DATA_ID='MBT_110_CI0000401_33';
DELETE FROM GP_QC_RULE_MAP WHERE DATA_ID='MBT_110_CI0000401_44';
INSERT INTO GP_QC_RULE_MAP (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_SET_ID, RULE_ID, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_11', '20200911', 'TESTCORP', '72', '002', NULL, NULL, 'MBT_110_20170103', 'MBT_110_CI0000401_11', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', NULL);
INSERT INTO GP_QC_RULE_MAP (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_SET_ID, RULE_ID, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_22', '20200911', 'TESTCORP', '72', '002', NULL, NULL, 'MBT_110_20170103', 'MBT_110_CI0000401_22', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', NULL);
INSERT INTO GP_QC_RULE_MAP (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_SET_ID, RULE_ID, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_33', '20200911', 'TESTCORP', '72', '002', NULL, NULL, 'MBT_110_20170103', 'MBT_110_CI0000401_33', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', NULL);
INSERT INTO GP_QC_RULE_MAP (DATA_ID, DATA_DATE, CORP_ID, ORG_ID, GROUP_ID, INQ_ORG_ID, INQ_GROUP_ID, RULE_SET_ID, RULE_ID, CHECK_FLAG, CHECK_DESC, CHECK_ERR_TYPE, NEXT_ACTION, DATA_STATUS, DATA_FLAG, DATA_OP, DATA_SOURCE, DATA_VERSION, DATA_REJ_DESC, DATA_DEL_DESC, DATA_CRT_USER, DATA_CRT_DATE, DATA_CRT_TIME, DATA_CHG_USER, DATA_CHG_DATE, DATA_CHG_TIME, DATA_APV_USER, DATA_APV_DATE, DATA_APV_TIME, RSV1, RSV2, RSV3, RSV4, RSV5) VALUES('MBT_110_CI0000401_44', '20200911', 'TESTCORP', '72', '002', NULL, NULL, 'MBT_110_20170103', 'MBT_110_CI0000401_44', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'mbtrule', NULL);


UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='主要组成人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='主要组成人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(MMB_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = MMB_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_310_EI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='主要出资人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='主要出资人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(SHAR_HOD_CERT_TYPE =="1" &&  SHAR_HOD_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = SHAR_HOD_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_310_FI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MBT_210_B_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = MBT_210_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_210I0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(MBT_220_B_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = MBT_220_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_220I0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='其他标识段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='其他标识段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(OTH_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = OTH_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_110_CI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20191204', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='002', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“港澳居民往来大陆通行证”的证件号码应符合如下规则：  
长度必须为 9 位或 11 位；  
第一位为字母“H”或“M”，后 8 位或 10 位必须为数字。 ', RULE_MESSAGE='“港澳居民往来大陆通行证”的证件号码应符合如下规则：  
长度必须为 9 位或 11 位；  
第一位为字母“H”或“M”，后 8 位或 10 位必须为数字。 ', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER=NULL, DATA_CHG_DATE=NULL, DATA_CHG_TIME=NULL, DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_130_I0000401_03';
UPDATE GP_QC_RULE SET DATA_DATE='20200911', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='婚姻信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='婚姻信息段的港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(E_SPO_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = E_SPO_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_110_CI0000401_33';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='相关还款责任人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='相关还款责任人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(INFO_ID_TYPE =="1" &&  ARLP_CERT_TYPE=="5" && !isEmpty(ARLP_CERT_NUM)){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = ARLP_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_230_EI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='共同授信人信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='共同授信人信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(C_BRER_TYPE =="1" &&  C_CERT_REL_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = C_CERT_REL_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_220_CI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(MBT_230_B_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = MBT_230_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_230I0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(MBT_510_B_CERT_TYPE=="5" && MBT_510_B_INFO_ID_TYPE=="1"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = MBT_510_B_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510I0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='其他债务人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='其他债务人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(D_INFO_ID_TYPE =="1" &&  D_GUAR_CERT_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = D_GUAR_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510_DI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='抵押物信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='抵押物信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(E_PLEDGOR_TYPE =="1" &&  E_PLEOR_CERT_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = E_PLEOR_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510_EI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='质物信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='质物信息段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(F_IPPC =="1" &&  F_PAWN_CERT_TYPE=="5"){
            def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
            def matcher = F_PAWN_CERT_NUM =~ aRegex
            matcher.matches()
            if(matcher.getCount()==1){
                  return  true
            }else{
                  return  false
            }

        }
       return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510_FI0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(MBT_110_B_ID_TYPE=="5"){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = MBT_110_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_110I0000401_3';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='相关还款责任人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_MESSAGE='相关还款责任人段的“港澳居民往来大陆通行证”的证件号码应符合如下规则：长度必须为9位或11位；第一位为字母“H”或“M”，后8位或10位必须为数字。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT=' if(D_ARLP_ID_TYPE =="1" &&  D_ARLP_CERT_TYPE=="5" ){
          def aRegex = /^H(\d{8}$|\d{10}$)|^M(\d{8}$|\d{10}$)/
          def matcher = D_ARLP_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

      }
     return  true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_210_DI0000401_3';


     UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='主要出资人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='主要出资人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(SHAR_HOD_CERT_TYPE =="1" &&  SHAR_HOD_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = SHAR_HOD_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_310_FI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='主要组成人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='主要组成人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MMB_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = MMB_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_310_EI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MBT_210_B_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = MBT_210_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_210I0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MBT_220_B_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = MBT_220_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_220I0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MBT_230_B_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = MBT_230_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_230I0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MBT_510_B_CERT_TYPE=="6" && MBT_510_B_INFO_ID_TYPE==''1''){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = MBT_510_B_CERT_NUM=~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510I0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='其他标识段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='其他标识段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(OTH_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = OTH_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_110_CI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20191204', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='002', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“台湾居民往来大陆通行证”的证件号码应符合如下规则：  
长度必须为 8 位或 10-14 位；  
8 位证件必须为 8 位数字；10-14 位证件，前 10 位必须为数字，其后若只有 3 位则应为“ （”+字母+“） ” ，若有 4 位则应为“ （”+两位数字+“） ” ', RULE_MESSAGE='“台湾居民往来大陆通行证”的证件号码应符合如下规则：  
长度必须为 8 位或 10-14 位；  
8 位证件必须为 8 位数字；10-14 位证件，前 10 位必须为数字，其后若只有 3 位则应为“ （”+字母+“） ” ，若有 4 位则应为“ （”+两位数字+“） ” ', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER=NULL, DATA_CHG_DATE=NULL, DATA_CHG_TIME=NULL, DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_130_I0000401_04';
UPDATE GP_QC_RULE SET DATA_DATE='20200911', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='婚姻信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='婚姻信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(E_SPO_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = E_SPO_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_110_CI0000401_44';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='相关还款责任人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='相关还款责任人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(INFO_ID_TYPE =="1" &&  ARLP_CERT_TYPE=="6" && !isEmpty(ARLP_CERT_NUM)){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = ARLP_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_230_EI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='共同授信人信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='共同授信人信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(C_BRER_TYPE =="1" &&  C_CERT_REL_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = C_CERT_REL_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_220_CI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='其他债务人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='其他债务人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(D_INFO_ID_TYPE =="1" &&  D_GUAR_CERT_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = D_GUAR_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510_DI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='抵押物信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='抵押物信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(E_PLEDGOR_TYPE =="1" &&  E_PLEOR_CERT_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = E_PLEOR_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510_EI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200303', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='相关还款责任人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='相关还款责任人段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(D_ARLP_ID_TYPE =="1" &&  D_ARLP_CERT_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = D_ARLP_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_210_DI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200305', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='质物信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='质物信息段的“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(F_IPPC =="1" &&  F_PAWN_CERT_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = F_PAWN_CERT_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_510_FI0000401_4';
UPDATE GP_QC_RULE SET DATA_DATE='20200214', CORP_ID='TESTCORP', ORG_ID='72', GROUP_ID='2', INQ_ORG_ID=NULL, INQ_GROUP_ID=NULL, RULE_DESC='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_MESSAGE='“台湾居民往来大陆通行证”的证件号码应符合如下规则：长度必须为8位或10-14位；8位证件必须为8位数字；10-14位证件，前10位必须为数字，其后若只有3 位则应为“（”+字母+“）”，若有4位则应为“（”+两位数字+“）”。', RULE_TYPE=NULL, RULE_SOURCE='BUSI', FIELD='DATA_ID', FIELD_NAME=NULL, TRIMMABLE=NULL, NULLABLE='Y', TYPE_ID=NULL, ENCODING=NULL, MIN_LENGTH=NULL, MAX_LENGTH=NULL, MIN_VALUE=NULL, MAX_VALUE=NULL, MAX_PRECISION=NULL, MIN_SCALE=NULL, MAX_SCALE=NULL, ENUMERATION=NULL, PATTERN=NULL, IN_ENTITY=NULL, IN_FIELD=NULL, EXISTS_SQL=NULL, SQL_EXTRA_KEY=NULL, SCRIPT='if(MBT_110_B_ID_TYPE=="6"){
          def aRegex = /(^\d{8}$)|(^\d{10}\([A-Za-z]\)$)|(^\d{10}\(\d{2}\)$)/
          def matcher = MBT_110_B_ID_NUM =~ aRegex
          matcher.matches()
          if(matcher.getCount()==1){
                return  true
          }else{
                return  false
          }

          }
      return true', BEAN=NULL, CHECK_FLAG=NULL, CHECK_DESC=NULL, CHECK_ERR_TYPE=NULL, NEXT_ACTION=NULL, DATA_STATUS=NULL, DATA_FLAG=NULL, DATA_OP=NULL, DATA_SOURCE=NULL, DATA_VERSION=NULL, DATA_REJ_DESC=NULL, DATA_DEL_DESC=NULL, DATA_CRT_USER=NULL, DATA_CRT_DATE=NULL, DATA_CRT_TIME=NULL, DATA_CHG_USER='admin', DATA_CHG_DATE='20200119', DATA_CHG_TIME='20200119171000', DATA_APV_USER=NULL, DATA_APV_DATE=NULL, DATA_APV_TIME=NULL, RSV1=NULL, RSV2=NULL, RSV3=NULL, RSV4='mbtrule', RSV5='1' WHERE DATA_ID='MBT_110I0000401_4';

